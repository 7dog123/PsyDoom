The $gp register appears to be set to the following in main() and kept at that value:
    800775E0

Stack:
    - The end address ('00200000' or 2 MiB) is stored at '80077BF8'
    - The max stack size ('00008000' or 32 KiB) is stored at '80077BFC'
    - Therefore the minimium stack address (to hold a 64-bit value) is '1F7FF8'

Heap:
    - Initialized to a base address of '800A9EC4'
    - Size is set to '14E134' (1,368,372 bytes)
    - End of the heap is at '801F7FF8'

Zeroed globals memory region:
    - The loaded program ends at '80078000'.
    - The heap begins at '800A9EC4'.
    - Therefore there is a gap of '31EC4' (204,484 bytes)
    - Some globals appear to be stored in this region.
        - But they are not a part of the executable image itself.
    - main() appears to zero the memory for this area before initializing the heap and a little bit before that.

Sprite lumps in PC DOOM which are NOT in the PSX:
    VILE, FIRE, SSWV, KEEN, BBRN, BOSF

Sprite lumps in PSX DOOM which are NOT in the PC version:
    HANC, BLCH, HANL, DED1, DED2, DED3, DED4, DED5, DED6

Likely range of 'states' (array of 'state_t'):
    80058D8C-8005E03B (inclusive)
        756 states?

Likely start of 'mobjinfo_t' (array of 'mobjinfo_t'): 
    8005E03C (first entry appears to be the player)

Apparent structure sizes on PSX Doom (bytes):
    - player_t: 300
    - line_t: 76
    - mobj_t: 148

To access an unused scrolling copyright notice, change the instruction at '80012334' from 'F9 48 00 0C' to 'E9 48 00 0C'. This appears to be similar to the copyright notice that is drawn by the initial 'SLUS_000.77' executable, but scrolling and with a shotgun sound played at the start. Was it used in the Demo verison perhaps?

Cheats quick ref:
    - Weapons, keys and ammo:   X, Triangle, L1, Up, Down, R2, Left, Left
    - Reveal automap:           Triangle, Triangle, L2, R2, L2, R2, R1, Square
    - God mode:                 Down, L2, Square, R1, Right, L1, Left, Circle
    - Warp:                     Right, Left, R2, R1, Triangle, L1, Circle, X
    - Show map objs:            Triangle, Triangle, L2, R2, L2, R2, R1, Circle
    - X-Ray vision:             L1, R2, L2, R1, Right, Triangle, X, Right

Anim struct seems to have 1 extra member (24 bytes):
    struct anim_t {
        u32 istexture;
        u32 picnum;
        u32 basepic;
        u32 numpics;
        u32 current;
        u32 ticMask;    // Determines how frequently anim updates
    };

Status bar struct seems to look like this (32 bytes):
    struct stbar_t {
        spclface_e  specialFace;
        u32         tryopen[NUMCARDS]; // (NUMCARDS=6)
        u32         gotgibbed;        
    };

mobjinfo_t appears to be (88 bytes):
    struct mobjinfo_t {
        u32 doomednum;
        u32 spawnstate;
        i32 spawnhealth;
        u32 seestate;
        u32 seesound;
        i32 reactiontime;
        u32 attacksound;
        u32 painstate;
        i32 painchance;
        u32 painsound;
        u32 meleestate;
        u32 missilestate;
        u32 deathstate;
        u32 xdeathstate;
        u32 deathsound;
        i32 speed;
        i32 radius;
        i32 height;
        i32 mass;
        i32 damage;
        u32 activesound;
        u32 flags;
    };
