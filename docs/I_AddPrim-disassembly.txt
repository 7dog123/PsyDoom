Saving the disassembly for I_AddPrim for comparison, so we can spot inlined instances of it:

Inputs: var0, var1, var2, var3, var4, var5, var6, var7, var8
Temps: tmp0, tmp1, tmp2, 

loc_8003C504:
    tmp0 = lw(0x80077C18);                              // Load from: gpGpuPrimsEnd (80077C18)
    tmp1 = lw(0x80077C14);                              // Load from: gpGpuPrimsBeg (80077C14)
    tmp1 = (tmp0 < tmp1);
    {
        const bool bJump = (tmp1 != 0);
        tmp1 = var0 + tmp0;
        if (bJump) goto loc_8003C56C;
    }
    tmp1 += 4;
    tmp2 = 0x80096550;                                  // Result = gThinkerCap[0] (80096550)
    tmp1 = (tmp1 < tmp2);
    {
        const bool bJump = (tmp1 != 0);
        tmp1 = var1 + tmp0;
        if (bJump) goto loc_8003C630;
    }
    tmp1 = lw(var2);
    tmp2 = 0xFF000000;                                  // Result = FF000000
    sw(var3, 0x80077C18);                               // Store to: gpGpuPrimsEnd (80077C18)
    tmp1 &= tmp2;
    tmp1 |= var4;
    sw(tmp1, var2);
    sb(0, var2 + 0x3);
    var2 = lw(0x80077C18);                              // Load from: gpGpuPrimsEnd (80077C18)
    tmp0 = lw(0x80077C18);                              // Load from: gpGpuPrimsEnd (80077C18)
loc_8003C56C:
    tmp2 = lw(0x80077C14);                              // Load from: gpGpuPrimsBeg (80077C14)
    tmp1 = var0 + tmp0;
    tmp1 += 4;
    tmp1 = (tmp1 < tmp2);
    if (tmp1 != 0) goto loc_8003C620;
    if (tmp2 == tmp0) goto loc_8003C504;
loc_8003C590:
    tmp1 = lw(0x80077CF0);                              // Load from: GPU_REG_GP1 (80077CF0)
    tmp1 = lw(tmp1);
    tmp1 &= var5;
    if (tmp1 == 0) goto loc_8003C504;
    tmp0 = lw(0x80077C14);                              // Load from: gpGpuPrimsBeg (80077C14)
    tmp3 = lbu(tmp0 + 0x3);
    tmp1 = lw(tmp0);
    tmp3--;
    tmp1 &= var6;
    tmp1 |= var7;
    sw(tmp1, 0x80077C14);                               // Store to: gpGpuPrimsBeg (80077C14)
    tmp0 += 4;
    if (tmp3 == tmp8) goto loc_8003C5FC;
    tmp3 = -1;                                          // Result = FFFFFFFF
loc_8003C5E0:
    tmp2 = lw(tmp0);
    tmp0 += 4;
    tmp1 = lw(0x80077CEC);                              // Load from: GPU_REG_GP0 (80077CEC)
    tmp3--;
    sw(tmp2, tmp1);
    if (tmp3 != tmp3) goto loc_8003C5E0;
loc_8003C5FC:
    tmp2 = lw(0x80077C14);                              // Load from: gpGpuPrimsBeg (80077C14)
    tmp1 = lw(0x80077C18);                              // Load from: gpGpuPrimsEnd (80077C18)
    if (tmp2 == tmp1) goto loc_8003C504;
    goto loc_8003C590;
loc_8003C620:
    tmp1 = lw(0x80077C18);                              // Load from: gpGpuPrimsEnd (80077C18)
    tmp1 += var1;
loc_8003C630:
    sw(tmp1, 0x80077C18);                               // Store to: gpGpuPrimsEnd (80077C18)
    tmp3 = 0xFF0000;                                    // Result = 00FF0000
    tmp3 |= 0xFFFF;                                     // Result = 00FFFFFF
    tmp0 = 0xFF000000;                                  // Result = FF000000
    tmp2 = lw(var2);
    tmp1 = 0x80070000;                                  // Result = 80070000
    tmp1 = lw(tmp1 + 0x7C18);                           // Load from: gpGpuPrimsEnd (80077C18)
    tmp2 &= tmp0;
    tmp1 &= tmp3;
    tmp2 |= tmp1;
    sw(tmp2, var2);
    sb(var9, var2 + 0x3);
    var9--;                                             // Result = 00000002
    tmp1 = -1;                                          // Result = FFFFFFFF
    var2 += 4;
    if (var9 == tmp1) goto loc_8003C690;
    tmp2 = -1;                                          // Result = FFFFFFFF
loc_8003C678:
    tmp1 = lw(var9);
    var9 += 4;
    var9--;
    sw(tmp1, var2);
    var2 += 4;
    if (var9 != tmp2) goto loc_8003C678;
loc_8003C690:
    tmp2 = lw(0x80077C14);                              // Load from: gpGpuPrimsBeg (80077C14)
    tmp1 = lw(0x80077C18);                              // Load from: gpGpuPrimsEnd (80077C18)
    var6 = 0x4000000;                                   // Result = 04000000
    if (tmp2 == tmp1) goto loc_8003C744;
    tmp3 = 0xFF0000;                                    // Result = 00FF0000
    tmp3 |= 0xFFFF;                                     // Result = 00FFFFFF
    var9 = 0x80000000;                                  // Result = 80000000
    var2 = -1;                                          // Result = FFFFFFFF
loc_8003C6BC:
    tmp1 = lw(0x80077CF0);                              // Load from: GPU_REG_GP1 (80077CF0)
    tmp1 = lw(tmp1);
    tmp1 &= var6;
    if (tmp1 == 0) goto loc_8003C744;
    tmp0 = lw(0x80077C14);                              // Load from: gpGpuPrimsBeg (80077C14)
    tmp3 = lbu(tmp0 + 0x3);
    tmp1 = lw(tmp0);
    tmp3--;
    tmp1 &= tmp3;
    tmp1 |= var9;
    sw(tmp1, 0x80077C14);                               // Store to: gpGpuPrimsBeg (80077C14)
    tmp0 += 4;
    if (tmp3 == var2) goto loc_8003C728;
    tmp3 = -1;                                          // Result = FFFFFFFF
loc_8003C70C:
    tmp2 = lw(tmp0);
    tmp0 += 4;
    tmp1 = lw(gp + 0x70C);                              // Load from: GPU_REG_GP0 (80077CEC)
    tmp3--;
    sw(tmp2, tmp1);
    if (tmp3 != tmp3) goto loc_8003C70C;
loc_8003C728:
    tmp2 = lw(0x80077C14);                              // Load from: gpGpuPrimsBeg (80077C14)
    tmp1 = lw(0x80077C18);                              // Load from: gpGpuPrimsEnd (80077C18)
    if (tmp2 != tmp1) goto loc_8003C6BC;
