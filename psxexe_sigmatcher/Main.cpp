#include "FatalErrors.h"
#include "FileUtils.h"
#include "FuncSignature.h"
#include "TextIStream.h"

//----------------------------------------------------------------------------------------------------------------------
// Entry point for 'PSXExeSigMatcher'
//----------------------------------------------------------------------------------------------------------------------
// Program purpose:
//
//  Parses the PSX function signatures generated by 'PSXObjSigGen' and attempts to match those against code in a
//  specified .EXE file. Outputs a list of potential matches to the specified file.
//----------------------------------------------------------------------------------------------------------------------

int main(int argc, char* argv[]) noexcept {
    if (argc != 2) {
        // TODO
        return 1;
        // FATAL_ERROR_F("Usage: %s <INPUT_OBJ_FILE_DUMP> <OUT_SIGNATURE_FILE> [OUT_DISASM_FILE]\n", argv[0]);
    }

    // Read the function signatures file generated by the other tool previously mentioned
    std::vector<FuncSignature> funcSigs;

    try {
        std::string sigsFileStr;

        if (!FileUtils::readFileAsString(argv[1], sigsFileStr)) {
            FATAL_ERROR_F("Failed to read input file '%s'!\n", argv[1]);
        }

        TextIStream textStream(sigsFileStr.c_str(), (uint32_t) sigsFileStr.size());
        FuncSignatureUtils::readSigsFromTextStream(textStream, funcSigs);
    } catch (...) {
        FATAL_ERROR_F("An error occurred while parsing function signatures from input file '%s'!\n", argv[1]);
    }

    return 0;
}
